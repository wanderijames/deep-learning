AWSTemplateFormatVersion: '2010-09-09'
Description: ""
Transform: AWS::Serverless-2016-10-31

Parameters:

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: office-deeplearning

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: p2.xlarge

  JupyterPassword:
    Description: The actual password is deeplearning
    Type: String
    Default: sha1:65a82d0e8951:772b9985d63d5df8b5597d1f10bc1972d8a7ed6e

Resources:

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
      - IpProtocol: tcp
        FromPort: 8888
        ToPort: 8888
        CidrIp: !Ref SSHLocation

  GPUInstance:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroups: [!Ref InstanceSecurityGroup]
      KeyName: !Ref KeyName
      ImageId: "ami-1aa7c063"
      InstanceType: !Ref InstanceType
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - 
              - "#!/bin/bash -xe"
              - "cd /home/ubuntu"
              - "sudo su - ubuntu -c \"jupyter notebook --generate-config\""
              - "sudo su - ubuntu -c \"git clone https://github.com/udacity/aind2-cnn.git\""
              - "sudo su - ubuntu -c \"sudo python3 -m pip install -r /home/ubuntu/aind2-cnn/requirements/requirements-gpu.txt --disable-pip-version-check\""
              - "sed -ie \"s/#c.NotebookApp.ip = 'localhost'/c.NotebookApp.ip = '0.0.0.0'/g\" /home/ubuntu/.jupyter/jupyter_notebook_config.py"
              - !Sub "sed -ie \"s/#c.NotebookApp.password = ''/c.NotebookApp.password = '${JupyterPassword}'/g\" /home/ubuntu/.jupyter/jupyter_notebook_config.py"
              - "sed -ie \"s/#c.NotebookApp.password_required = False/c.NotebookApp.password_required = True/g\" /home/ubuntu/.jupyter/jupyter_notebook_config.py"
              - "sudo chown -R ubuntu:ubuntu /home/ubuntu/.jupyter"
              - "sudo su - ubuntu -c \"export KERAS_BACKEND=tensorflow\""
              - "sudo su - ubuntu -c \"python -c 'from keras import backend'\""
              - "sudo su - ubuntu -c \"jupyter notebook --no-browser\""
        


Outputs:
  PrivateDnsName:
    Description: The Private DNSName
    Value: !GetAtt GPUInstance.PrivateDnsName  
  JupyterAddress:
    Description: The Public DNSName
    Value: !Join
      - ""
      -
        - "http://"
        - !GetAtt GPUInstance.PublicDnsName
        - ":8888/"
  InstanceID:
    Description: The Instance ID
    Value: !Ref GPUInstance